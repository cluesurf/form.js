import { Load, LoadSave } from './types';
export declare const LIST: Array<any>;
export declare const MARK = 1;
export declare const OBJECT: object;
export declare const OBJECT_LIST: Array<object>;
export declare const TEXT = "";
export declare const WAVE = true;
export declare function isArray<T>(x: unknown): x is Array<T>;
export declare function isObject(x: unknown): x is object;
export declare function seek_load(x: unknown): x is Load;
export declare function seek_save(x: unknown): x is LoadSave;
export declare function seek_text(x: unknown): x is string;
export declare function seek_tree<TargetForm>(x: any, example: TargetForm, message?: string): x is TargetForm;
export declare function seek_wave<T>(x: unknown): x is boolean;
export declare function test_code(x: unknown): asserts x is string;
export declare function test_form<V>(seed: unknown, check: (x: any) => x is V, invalid?: string): asserts seed is V;
export declare function test_hash(x: unknown): asserts x is object;
export declare function test_list<T>(x: unknown): x is Array<T>;
export declare function test_load(x: unknown): asserts x is Load;
export declare function test_save(x: unknown): asserts x is LoadSave;
export declare function test_text(x: unknown): asserts x is string;
export declare function test_tree<TargetForm>(x: any, example: TargetForm, message?: string): asserts x is TargetForm;
